const Joi = require("@hapi/joi");
const mongoose = require("mongoose");

const carSchema = new mongoose.Schema(
  {
    mark: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "Mark",
      required: true,
    },

    license: { type: Date, default: Date.now() },
    kilometerStand: { type: Number },
    co2: { type: Number },
    price: { type: Number },
    door: { type: Number },
    seats: { type: Number },
    cylindree: { type: Number },
    consumOut: { type: Number },
    consumIn: { type: Number },
    consumMixed: { type: Number },
    pollutionCat: { type: Number },
    model: { type: String, required: true },
    power: { type: String },
    color: { type: String },
    description: { type: String },
    drive: { type: Boolean, default: false },
    type: { type: Boolean, default: false },
    fuel: { type: Boolean, default: false },
    blutooth: { type: Boolean, default: false },
    metallic: { type: Boolean, default: false },
    frontSidAirbag: { type: Boolean, default: false },
    navigationSystem: { type: Boolean, default: false },
    airCondition: { type: Boolean, default: false },
    elecWindow: { type: Boolean, default: false },
    heatedSeat: { type: Boolean, default: false },
    tractionControl: { type: Boolean, default: false }, //التحكم في الجر
    parkingAssistance: { type: Boolean, default: false },
    frontParkingAssistance: { type: Boolean, default: false },
    speedRegulator: { type: Boolean, default: false },
    rainSensor: { type: Boolean, default: false },
    led: { type: Number },
    LEDdaytime: { type: Boolean, default: false },
    LEDHeadlights: { type: Boolean, default: false },
    corneringLight: { type: Boolean, default: false },
    fogLights: { type: Boolean, default: false },
    powerSteering: { type: Boolean, default: false },
    multifunctionSteeringWheel: { type: Boolean, default: false },
    alloywheels: { type: Boolean, default: false },
    centerArmrest: { type: Boolean, default: false },
    serviceBook: { type: Boolean, default: false },
    sportPack: { type: Boolean, default: false },
    handsfree: { type: Boolean, default: false },
    sunroof: { type: Boolean, default: false },
    roofRack: { type: Boolean, default: false },
    alarm: { type: Boolean, default: false },
    boardComputer: { type: Boolean, default: false },
    leather: { type: Boolean, default: false },
    isofix: { type: Boolean, default: false },
    ESP: { type: Boolean, default: false },
    abs: { type: Boolean, default: false },
    musicPlayer: { type: Boolean, default: false },
    sportShassis: { type: Boolean, default: false },
    sportsSeats: { type: Boolean, default: false },
    voiceCommand: { type: Boolean, default: false },
    immobilizerSystem: { type: Boolean, default: false },
    carImages:[String],
    mainImage:{type: String}
  },
  {
    timestamps: true,
  }
);

const Car = mongoose.model("Car", carSchema);

function validateCar(car) {
  const schema = Joi.object({
    mark: Joi.objectId().required(),
    license: Joi.date(),
    drive: Joi.bool(),
    type: Joi.bool(),
    fuel: Joi.bool(),
    blutooth: Joi.bool(),
    metallic: Joi.bool(),
    frontSidAirbag: Joi.bool(),
    navigationSystem: Joi.bool(),
    airCondition: Joi.bool(),
    elecWindow: Joi.bool(),
    heatedSeat: Joi.bool(),
    ESP: Joi.bool(),
    tractionControl: Joi.bool(), //التحكم في الجر
    parkingAssistance: Joi.bool(),
    frontParkingAssistance: Joi.bool(),
    speedRegulator: Joi.bool(),
    RainSensor: Joi.bool(),
    LEDdaytime: Joi.bool(),
    LEDHeadlights: Joi.bool(),
    corneringLight: Joi.bool(),
    powerSteering: Joi.bool(),
    fogLights: Joi.bool(),
    serviceBook: Joi.bool(),
    centerArmrest: Joi.bool(),
    sportPack: Joi.bool(),
    handsfree: Joi.bool(),
    sunroof: Joi.bool(),
    roofRack: Joi.bool(),
    alarm: Joi.bool(),
    boardComputer: Joi.bool(),
    alloywheels: Joi.bool(),
    leather: Joi.bool(),
    isofix: Joi.bool(),
    abs: Joi.bool(),
    musicPlayer: Joi.bool(),
    sportShassis: Joi.bool(),
    sportsSeats: Joi.bool(),
    multifunctionSteeringWheel: Joi.bool(),
    voiceCommand: Joi.bool(),
    immobilizerSystem: Joi.bool(),
    kilometerStand: Joi.number(),
    co2: Joi.number(),
    door: Joi.number(),
    seats: Joi.number(),
    led: Joi.number(),
    cylindree: Joi.number(),
    consumOut: Joi.number(),
    consumIn: Joi.number(),
    consumMixed: Joi.number(),
    pollutionCat: Joi.number(),
    price: Joi.number().required(),
    model: Joi.string(),
    power: Joi.string(),
    color: Joi.string(),
    description: Joi.string(),
  });
  return schema.validate(car);
}

exports.Car = Car;
exports.validate = validateCar;
